{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.routing.mode.ts","./src/app/auth/auth-interceptor.ts","./src/app/auth/auth.guard.ts","./src/app/auth/auth.service.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/signup/signup.component.ts","./src/app/auth/signup/signup.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/posts/post-create/post-create.component.ts","./src/app/posts/post-create/post-create.component.html","./src/app/posts/post-list/post-list.component.ts","./src/app/posts/post-list/post-list.component.html","./src/app/posts/posts.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n constructor(private serve:AuthService){}\n  ngOnInit() {\n  this.serve.autoAuthuser();\n  }\n\n}\n","<app-header></app-header>\n<main>\n<router-outlet></router-outlet>\n</main>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport{ ReactiveFormsModule} from '@angular/forms';\nimport {\n  MatInputModule,\n  MatCardModule,\n  MatButtonModule,\n  MatToolbarModule,\n  MatProgressSpinnerModule,\n  MatExpansionModule,\n  MatPaginatorModule\n} from '@angular/material';\n\nimport { AppComponent } from './app.component';\nimport { PostCreateComponent } from './posts/post-create/post-create.component';\nimport { HeaderComponent } from './header/header.component';\nimport { PostListComponent } from './posts/post-list/post-list.component';\nimport { AppRouteModule } from './app.routing.mode';\nimport { LoginComponent } from './auth/login/login.component';\nimport { SignupComponent } from './auth/signup/signup.component';\nimport { AuthInterceptor } from './auth/auth-interceptor';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostCreateComponent,\n    HeaderComponent,\n    PostListComponent,\n    LoginComponent,\n    SignupComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatCardModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatPaginatorModule,\n    HttpClientModule,\n    AppRouteModule,\n    MatProgressSpinnerModule\n  ],\n  providers: [{provide:HTTP_INTERCEPTORS,useClass:AuthInterceptor,multi:true}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport { PostListComponent } from './posts/post-list/post-list.component';\r\nimport { PostCreateComponent } from './posts/post-create/post-create.component';\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { SignupComponent } from './auth/signup/signup.component';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nconst routes: Routes = [\r\n    {path: '', component: PostListComponent},\r\n    {path: 'create', component: PostCreateComponent,canActivate:[AuthGuard]},\r\n    {path: 'login', component: LoginComponent},\r\n    {path: 'signup', component: SignupComponent}\r\n];    \r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule],\r\n    providers:[AuthGuard]\r\n\r\n})\r\nexport class AppRouteModule {}\r\n","import { HttpInterceptor , HttpRequest, HttpHandler} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\nimport { CdkStepperNext } from '@angular/cdk/stepper';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n constructor(private authService: AuthService) {}\r\n    intercept(req: HttpRequest<any>, next: HttpHandler){\r\n        const authToken = this.authService.gettoken();\r\n       const authRequest = req.clone({\r\n      headers: req.headers.set('authorization','Bearer ' + authToken)\r\n     })\r\n      return next.handle(authRequest);\r\n    }\r\n}\r\n","import { CanActivate ,ActivatedRouteSnapshot,RouterStateSnapshot,UrlTree, Router} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\n@Injectable()\r\nexport  class AuthGuard implements CanActivate{\r\n  constructor(private router:Router,private authserv:AuthService){}\r\n    canActivate(route: ActivatedRouteSnapshot,\r\n         state: RouterStateSnapshot):\r\n          boolean  | Observable<boolean> | Promise<boolean> {\r\n      const isauth=this.authserv.getisauth();\r\n\r\n    if (!isauth){\r\n      this.router.navigate(['/login']);\r\n    }      \r\n      return isauth;\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthData, AuthData1 } from './auth-data.model';\r\nimport { Subject } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { DataRowOutlet } from '@angular/cdk/table';\r\n\r\n@Injectable({\r\n    providedIn: 'root'})\r\n\r\n\r\nexport class AuthService{\r\n    constructor(private http: HttpClient,private router: Router){}\r\n  private token :string;\r\n  private tokenTimes:any;\r\n  isauthenticate=false;\r\n  private authStatusListner=new Subject<boolean>();\r\ny\r\ngetauthstatuslistner(){\r\n    return this.authStatusListner.asObservable();\r\n}\r\n    gettoken(){\r\n        return this.token;\r\n    }   \r\n     createUser(username:string,password:string,email:string,address:string){\r\n    const authData: AuthData1={username:username,password:password,email:email,address:address};\r\n    this.http.post('register',authData).subscribe((respo)=>{\r\n   console.log(respo);\r\n   this.router.navigate(['/login']);\r\n    })\r\n}\r\nlogin(email:string,password:string){\r\n    const authData:AuthData={email:email,password:password};\r\n    this.http.post<{message:string,token:string,expiresIn:number}>('login',authData).subscribe((respo)=>{\r\n   console.log(respo);\r\n   const token=respo.token;\r\n   this.token=token;\r\n   if(token){\r\n       const expiresInduration=respo.expiresIn;\r\n      console.log(expiresInduration);\r\n     this.setAuthTimer(expiresInduration);\r\n      const now=new Date();\r\n      const expirationDate=new Date(now.getTime()+expiresInduration*1000);\r\n     console.log(expirationDate);\r\n      this.saveAuthData(token,expirationDate);\r\n       this.isauthenticate=true;\r\n       \r\n   this.authStatusListner.next(true);\r\n  this.router.navigate(['/']);\r\n}});\r\n}\r\nprivate setAuthTimer(duration:number){\r\n    console.log('setting time',duration);\r\n    this.tokenTimes= setTimeout(()=>{\r\n        this.logout();\r\n              },duration*1000);\r\n}\r\nautoAuthuser(){\r\nconst authinfo=this.getauthdat();\r\nif(!authinfo){\r\n    return;\r\n}\r\nconst now=new Date();\r\nconst expiresIn=authinfo.expirationDate.getTime()-now.getTime();\r\nconsole.log(authinfo,expiresIn);\r\nif(expiresIn>0){\r\n    this.token=authinfo.token;\r\n    this.isauthenticate=true;\r\n    this.setAuthTimer(expiresIn/1000);\r\n    this.authStatusListner.next(true);\r\n}\r\n}\r\n\r\nprivate saveAuthData(token:string,expirationInDate:Date)\r\n{\r\nlocalStorage.setItem('token',token);\r\nlocalStorage.setItem('expiration',expirationInDate.toISOString());\r\n}\r\nprivate clearAuthData(){\r\nlocalStorage.removeItem('token');\r\nlocalStorage.removeItem('expiration');\r\n}\r\n\r\ngetisauth()\r\n{\r\n    return this.isauthenticate;\r\n}\r\nlogout(){\r\n   this.token=null;\r\n   this.isauthenticate=false; \r\n   this.authStatusListner.next(false);\r\n   clearTimeout(this.tokenTimes);\r\n   this.clearAuthData();\r\n   this.router.navigate(['/']);\r\n\r\n}\r\nprivate getauthdat(){\r\n    const token=localStorage.getItem('token');\r\n    const expirationDatels=localStorage.getItem('expiration');\r\n    if(!token  || !expirationDatels)\r\n    {\r\nreturn;\r\n    }return{\r\n        token:token,\r\n        expirationDate:new Date(expirationDatels)\r\n    }\r\n\r\n}\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../auth.service';\n\n@Component({\n \n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n isLoading=false;\n constructor(public authservice: AuthService) { }\n\n  ngOnInit() {\n  }\nonLogin(form: NgForm){\n \nif (form.invalid) {\n  return;\n}\nthis.isLoading=true;\nthis.authservice.login(form.value.email, form.value.password);\n}\n}\n\n\n","<mat-card>\n    <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n    <form (submit)=\"onLogin(loginform)\" #loginform=\"ngForm\" *ngIf=\"!isLoading\">\n      <mat-form-field>\n        <input\n          matInput\n          type=\"email\"\n        ngModel\n          placeholder=\"E-MAIL\"\n          name=\"email\"\n          #emailinput=\"ngModel\"\n          required email>  \n        <mat-error *ngIf=\"emailinput.invalid\">Please enter a valid email.</mat-error>\n      </mat-form-field>\n\n      <mat-form-field>\n        <input type=\"password\"\n          matInput  \n          placeholder=\"Password please\"\n          ngModel\n          name=\"password\"\n          #passwordinput=\"ngModel\"\nrequired\n         >\n        <mat-error *ngIf=\"passwordinput.invalid\">Please enter valid password.</mat-error>\n      </mat-form-field>\n      <button\n        mat-raised-button\n        color=\"accent\"\n        type=\"submit\" \n        *ngIf='!isLoading'>Login</button>\n   \n  \n  </form>\n  </mat-card>\n  ","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  isLoading = false;\n  constructor(public authservice: AuthService) { }\n\n  ngOnInit() {\n  }\nonSignup(form: NgForm) {\nif (form.invalid) {\n  return;\n}\nthis.isLoading=true;\nthis.authservice.createUser(form.value.username,form.value.password,form.value.email, form.value.address);\n}\n}\n","<mat-card>\n  <mat-spinner *ngIf='isLoading'></mat-spinner>\n    <form (submit)=\"onSignup(signupform)\" #signupform=\"ngForm\" *ngIf=\"!isLoading\">\n      <mat-form-field>\n        <input\n        matInput\n        type=\"username\"\n      ngModel\n        placeholder=\"username\"\n        name=\"username\"\n        #usernameinput=\"ngModel\"\n        required>  \n      <mat-error *ngIf=\"usernameinput.invalid\">Please enter a valid username.</mat-error>\n    </mat-form-field>\n \n      <mat-form-field>\n        <input type=\"password\"\n          matInput  \n          placeholder=\"Password please\"\n          ngModel\n          name=\"password\"\n          #passwordinput=\"ngModel\"\n         required>\n        <mat-error *ngIf=\"passwordinput.invalid\">Please enter valid password.</mat-error>\n      </mat-form-field>\n      <mat-form-field>\n        <input\n          matInput\n          type=\"email\"\n        ngModel\n          placeholder=\"E-MAIL\"\n          name=\"email\"\n          #emailinput=\"ngModel\"\n          required email>  \n        <mat-error *ngIf=\"emailinput.invalid\">Please enter a valid email.</mat-error>\n      </mat-form-field>\n      <mat-form-field>\n        <input\n        matInput\n        type=\"address\"\n      ngModel\n        placeholder=\"address\"\n        name=\"address\"\n        #addressinput=\"ngModel\"\n        required>  \n      <mat-error *ngIf=\"addressinput.invalid\">Please enter a valid address.</mat-error>\n    </mat-form-field>\n      <button\n        mat-raised-button\n        color=\"accent\"\n        type=\"submit\" *ngIf='!isLoading'>Signup</button>\n      \n      </form>\n  </mat-card>\n  ","import { Component } from \"@angular/core\";\nimport { AuthService } from \"../auth/auth.service\";\nimport { Subscription } from \"rxjs\";\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent {\n  userauthincation=false;\n  private authlistnersub: Subscription;\n  constructor(private authserve:AuthService){\n  }\n\n  ngOnInit(){\n    this.userauthincation=this.authserve.getisauth();\nthis.authlistnersub =this.authserve.getauthstatuslistner().subscribe(authenicted=>{\nthis.userauthincation=authenicted;\n});\n  }\n  ngOnDestroy(){\nthis.authlistnersub.unsubscribe();\n  }\n  onlogout(){\n    this.authserve.logout();\n  }\n}\n","<mat-toolbar color=\"primary\"><span>\n  <a mat-button routerLink=\"/\">Articles</a>  \n</span>\n<span class=\"spacer\"></span>\n<ul *ngIf=\"userauthincation\">\n    <li>\n        <a mat-button routerLink=\"/create\" routerLinkActive=\"mat-accent\">Create</a>\n    </li>\n</ul>\n<ul *ngIf=\"!userauthincation\">\n  <li>\n      <a mat-button routerLink=\"/login\" routerLinkActive=\"mat-accent\">Login</a>\n  </li>\n</ul>\n<ul *ngIf=\"!userauthincation\">\n  <li>\n      <a mat-button routerLink=\"/signup\" routerLinkActive=\"mat-accent\">Signup</a>\n  </li>\n</ul>\n<ul *ngIf=\"userauthincation\">\n  <li>\n      <a mat-button mat-icon-button (click)=\"onlogout()\" >LogOut</a>\n  </li>\n</ul>\n</mat-toolbar>\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormGroup, RequiredValidator, Validators, FormControl } from '@angular/forms';\n\nimport { PostsService } from '../posts.service';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { Post } from '../post.model';\n\n@Component({\n  selector: 'app-post-create',\n  templateUrl: './post-create.component.html',\n  styleUrls: ['./post-create.component.css']\n})\nexport class PostCreateComponent implements OnInit {\n  enteredTitle = '';\n  enteredbody = '';\n  enteredauthor = '';\n  post: Post;\n\n  isloading = false;\n private mode = 'create';\n private postId: string;\n\n  constructor(public postsService: PostsService, public route: ActivatedRoute) {}\n  ngOnInit() {\n\n\n}\n\n  \n\n onAddPost(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    console.log(form.value);\n    this.isloading = true;\n    this.postsService.addPost(form.value.title,form.value.body,form.value.author);\n    form.reset();\n\n}\n}\n\n","\r\n<mat-card>\r\n    <mat-spinner *ngIf=\"isloading\"></mat-spinner>\r\n    <form (submit)=\"onAddPost(postForm)\" #postForm=\"ngForm\" *ngIf=\"!isloading\">\r\n      <mat-form-field>\r\n        <input\r\n          matInput\r\n          type=\"text\"\r\n          ngModel\r\n          name=\"title\"\r\n          placeholder=\"Articles Title\"\r\n          #title=\"ngModel\">  \r\n        <mat-error *ngIf=\"title.invalid\">Please enter a Articles title.</mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field>\r\n        <textarea\r\n          matInput\r\n          ngModel\r\n          name=\"body\"\r\n          placeholder=\"Articles contents\"\r\n          #body=\"ngModel\"></textarea>\r\n        <mat-error *ngIf=\"body.invalid\">Please enter a Articles CONTENT.</mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field>\r\n        <textarea\r\n          matInput\r\n          ngModel\r\n          name=\"author\"\r\n          placeholder=\"Author name\"\r\n          #author=\"ngModel\"></textarea>\r\n        <mat-error *ngIf=\"author.invalid\">Please enter a Articles Author.</mat-error>\r\n      </mat-form-field>\r\n      <button\r\n        mat-raised-button\r\n        color=\"accent\"\r\n        type=\"submit\">Save Post</button>\r\n    </form>\r\n  </mat-card>\r\n  ","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Post } from '../post.model';\nimport { PostsService } from '../posts.service';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { PageEvent } from '@angular/material';\n\n@Component({\n  selector: 'app-post-list',\n  templateUrl: './post-list.component.html',\n  styleUrls: ['./post-list.component.css']\n})\nexport class PostListComponent implements OnInit, OnDestroy {\n \n  posts: Post[] = [];\n  totalPost=0;\n  private postsSub: Subscription;\n isloading=false;\n postperpage=2;\n currentpage=1;\n pagesieoption=[1,2,6,9]\n userauthincation=false;\n  private authlistnersub: Subscription;\n \n  constructor(public postsService: PostsService,private Authserv:AuthService) {}\n\n  ngOnInit() {\n    this.isloading=true;\n    this.postsService.getPosts(this.postperpage, this.currentpage);\n    this.postsSub = this.postsService.getPostUpdateListener()\n      .subscribe((postData: {posts:Post[],postCount:number}) => {\n        this.isloading=false;\n        this.posts = postData.posts;\n        this.totalPost=postData.postCount;\n        console.log(this.posts);  \n      });\n    this.userauthincation=this.Authserv.getisauth();\n    this.authlistnersub =this.Authserv.getauthstatuslistner().subscribe(authenicted=>{\n        this.userauthincation=authenicted;\n        });\n  }\n  \n  ngOnDestroy() {\n    this.postsSub.unsubscribe();\n    this.authlistnersub.unsubscribe();\n\n  }\n  onChangePage(pagevent: PageEvent)\n  {\n    this.isloading=true;\n this.currentpage=pagevent.pageIndex+1;\nthis.postperpage=pagevent.pageSize;\nthis.postsService.getPosts(this.postperpage, this.currentpage);\n    console.log(pagevent);\n\n  }\n}\n","<mat-spinner *ngIf=\"isloading\"></mat-spinner>\r\n<mat-accordion multi=\"true\" *ngIf=\"posts.length > 0 && !isloading\">\r\n  <mat-expansion-panel *ngFor=\"let post of posts\">\r\n    <mat-expansion-panel-header>\r\n      <p mat-color=\"green\">Title: </p> {{ post.title }}\r\n   </mat-expansion-panel-header>\r\n<p>Contents: </p> {{ post.body }}\r\n<br>\r\n<p>Author: </p> {{post.author}}\r\n</mat-expansion-panel> \r\n</mat-accordion>\r\n<mat-paginator [length]=\"totalPost\" [pageSize]=\"postperpage\" [pageSizeOptions]=\"pagesieoption\" (page)=\"onChangePage($event)\" *ngIf=\"posts.length > 0\"></mat-paginator>\r\n<p class=\"info-text mat-body-1\" *ngIf=\"posts.length <= 0 && !isloading\">No posts added yet!</p>\r\n\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Post ,Post1} from './post.model';\nimport { Router } from '@angular/router';\n\n@Injectable({ providedIn: 'root' })\nexport class PostsService {\n  private posts: Post[] = [];\n  private postsUpdated = new Subject<{posts: Post[], postCount: number}>();\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  getPosts(postperchange: number, currentpage: number) {\n    const queryParams = `?pageSize=${postperchange}&page=${currentpage}`;\n    this.http\n      .get<{ message: string; posts: any, maxPosts: number }>(\n        'articles' + queryParams\n      )\n      .pipe(map((postData) => {\n        return {posts: postData.posts.map(post => {\n          console.log(post);\n          return {\n            title: post.title,\n            body: post.body,\n            id: post._id,\n           author: post.author\n          };\n        }), maxPosts: postData.maxPosts};\n      }))\n      .subscribe(transformedPostsData => {\n        this.posts = transformedPostsData.posts;\n        this.postsUpdated.next({posts: [...this.posts], postCount: transformedPostsData.maxPosts});\n      });\n  }\n\n  getPostUpdateListener() {\n    return this.postsUpdated.asObservable();\n  }\n\n  getPost(id: string) {\n    return this.http.get<{_id: string, title: string, body: string, author: string}>('articles/' + id);\n  }\n\n  addPost(title: string, body: string, author: string) {\n   const postData : Post1 ={title: title,content:body,author: author};\n   console.log(postData);\n   this.http\n      .post<{ message: string, post: Post }>('articles', postData)\n      .subscribe(responseData => {\n         this.router.navigate(['/']);\n      });\n  }      \n\n\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}